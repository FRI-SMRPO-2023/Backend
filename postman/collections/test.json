{
	"info": {
		"_postman_id": "6e445839-e2b0-4cb4-88c4-13bcfc5cabaf",
		"name": "test",
		"description": "This is a simple application made with Express and documented with Swagger\n\nContact Support:\n Name: Mark Zakelj",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "23986486-6e445839-e2b0-4cb4-88c4-13bcfc5cabaf"
	},
	"item": [
		{
			"name": "Logins check",
			"item": [
				{
					"name": "b login with missing body field (mail)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "899fe995-cd1c-4f26-9287-aa1ba7cb3d07",
								"exec": [
									"pm.test(\"Status code is 409\", function () {",
									"    pm.response.to.have.status(409);",
									"});",
									"",
									"pm.test(\"The response has all properties\", () => {",
									"    //parse the response JSON and test three properties",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.status).to.eql('failed');",
									"    pm.expect(responseJson.error.path).to.eql('email');",
									"    pm.expect(responseJson.error.message).to.be.a('string');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "39647d4e-1cc9-4be3-a6f4-5ab8ee731a6a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"password\": \"123456\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "b login with missing body field (password)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c1a93e75-2c4a-49cc-b4cf-5168ab6eb454",
								"exec": [
									"pm.test(\"Status code is 409\", function () {",
									"    pm.response.to.have.status(409);",
									"});",
									"",
									"pm.test(\"The response has all properties\", () => {",
									"    //parse the response JSON and test three properties",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.status).to.eql('failed');",
									"    pm.expect(responseJson.error.path).to.eql('password');",
									"    pm.expect(responseJson.error.message).to.be.a('string');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "e54d1021-774b-4ddc-b73a-81fa938af535",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"adminer@prisma.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "b login with wrong email",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "66bd3725-ecd3-450d-b154-44850a783400",
								"exec": [
									"pm.test(\"Status code is 409\", function () {",
									"    pm.response.to.have.status(409);",
									"});",
									"",
									"pm.test(\"The response has all properties\", () => {",
									"    //parse the response JSON and test three properties",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.status).to.eql('failed');",
									"    pm.expect(responseJson.error.message).to.be.a('string');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "25910b1f-6baf-4b85-b718-b873efb239cc",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"adminer@prisma.com\",\n    \"password\": \"123456789012\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "b login with wrong password",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6f106518-53ad-4d14-b70b-d931118f1033",
								"exec": [
									"pm.test(\"Status code is 409\", function () {",
									"    pm.response.to.have.status(409);",
									"});",
									"",
									"pm.test(\"The response has all properties\", () => {",
									"    //parse the response JSON and test three properties",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.status).to.eql('failed');",
									"    pm.expect(responseJson.error.message).to.be.a('string');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "0e69759e-9b03-4c16-9c4b-8ab1ae07a610",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"admin@prisma.com\",\n    \"password\": \"asdfqwerzxcv\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "admin login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "38b6e376-7acc-463d-a26d-282ecf75f274",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"The response has all properties\", () => {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.id).to.eql(1);",
									"    pm.expect(responseJson.name).to.eql('Stanko');",
									"    pm.expect(responseJson.email).to.eql('admin@prisma.com');",
									"    pm.expect(responseJson.isAdmin).to.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "c0f6b6ad-795b-421c-a0f3-c96f867c153b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"admin@prisma.com\",\n    \"password\": \"123456789012\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "scrum master login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "38b6e376-7acc-463d-a26d-282ecf75f274",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"The response has all properties\", () => {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.id).to.eql(3);",
									"    pm.expect(responseJson.name).to.eql('Sonja');",
									"    pm.expect(responseJson.email).to.eql('developerka@prisma.com');",
									"    pm.expect(responseJson.isAdmin).to.eql(false);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "5db955a9-5b36-490e-ba0e-b1d2cd52dc5b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"developerka@prisma.com\",\n    \"password\": \"123456789012\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "product owner login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "38b6e376-7acc-463d-a26d-282ecf75f274",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"The response has all properties\", () => {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.id).to.eql(2);",
									"    pm.expect(responseJson.name).to.eql('Slavko');",
									"    pm.expect(responseJson.email).to.eql('developer@prisma.com');",
									"    pm.expect(responseJson.isAdmin).to.eql(false);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "4dd4bfeb-7ade-4709-a967-73c741f48b30",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"developer@prisma.com\",\n    \"password\": \"123456789012\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				}
			],
			"id": "00e49e11-de97-460d-bbe1-a446a53a6b16"
		},
		{
			"name": "status and logout",
			"item": [
				{
					"name": "Logout user from the system, delete the httpOnly cookie in browser Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b5b40930-6296-4d24-80b7-b1036f77a8c3",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "4c5d4747-13a5-48e3-a925-71ad955654e8",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/auth/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check if the current user is authenticated (has a valid cookie)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ee3d8040-eb18-423c-96ec-196250f9db45",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "82969c47-846e-4945-9956-a5e67b77c41f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/auth/is-authenticated",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"is-authenticated"
							]
						}
					},
					"response": []
				},
				{
					"name": "login with correct credentials Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "38b6e376-7acc-463d-a26d-282ecf75f274",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"The response has all properties\", () => {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.id).to.eql(1);",
									"    pm.expect(responseJson.name).to.eql('Stanko');",
									"    pm.expect(responseJson.email).to.eql('admin@prisma.com');",
									"    pm.expect(responseJson.isAdmin).to.eql(true);",
									"    pm.expect(responseJson.lastLogin).to.exist;",
									"});",
									"",
									"pm.test(\"Set-Cookie is present\", function () {",
									"    pm.response.to.have.header(\"Set-Cookie\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "b7c3034d-a0e0-4710-8672-187d7e8531d1",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"admin@prisma.com\",\n    \"password\": \"123456789012\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check if the current user is authenticated (has a valid cookie) Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ee3d8040-eb18-423c-96ec-196250f9db45",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "dc7eab70-3c8f-4a75-b6d9-7ed675fa81f5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/auth/is-authenticated",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"is-authenticated"
							]
						}
					},
					"response": []
				}
			],
			"id": "77fe69b6-0d64-454f-8b2f-4f8b710dba2b"
		},
		{
			"name": "adding and deleting user",
			"item": [
				{
					"name": "Get all users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8b6808cb-529c-402a-85e5-d142923d68c7",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Number of users is 2\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.length).to.eql(3);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "f80b750b-b8da-4500-89e6-2c9627e40bd7",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "686b5ab4-3391-42a5-9010-89b42d400c46",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "b4313d6d-fa70-4c25-b0da-892b345eebac",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"hacker\",\n    \"name\": \"Slavko\",\n    \"lastName\": \"Pivnik\",\n    \"password\": \"badpassword123\",\n    \"email\": \"bademail123@mail.com\",\n    \"isAdmin\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "try create same user again",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "90c4504c-df40-48d6-8a39-8fdf5265fce0",
								"exec": [
									"pm.test(\"Status code is 409\", function () {",
									"    pm.response.to.have.status(409);",
									"});",
									"",
									"pm.test(\"The response has all properties\", () => {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.status).to.eql('failed');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "33336d4e-3518-4408-a0c6-23fd6bf546a6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"hacker\",\n    \"name\": \"Slavko\",\n    \"lastName\": \"Pivnik\",\n    \"password\": \"badpassword123\",\n    \"email\": \"bademail123@mail.com\",\n    \"isAdmin\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all users 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8b6808cb-529c-402a-85e5-d142923d68c7",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Number of users is 4\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.length).to.eql(4);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "447b66e8-0b08-4e25-9d7a-c05415923249",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete user by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d3b911a3-1de0-41b5-ae01-027f313531b2",
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "4fe20add-9c3b-4372-b75a-2f0d7e7ffe08",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users/3",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all users Copy 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8b6808cb-529c-402a-85e5-d142923d68c7",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Number of users is 3\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.length).to.eql(3);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "9ea51fa3-fae0-4131-b612-0aedbe7aceb4",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				}
			],
			"id": "649666a0-a6ae-4f08-bfd7-d9d269b38f51"
		},
		{
			"name": "Projects",
			"item": [
				{
					"name": "Get all projects Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b31d1672-827a-435b-8417-0ad8e6609228",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Number of projects is 2\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.length).to.eql(2);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "dd04861b-b2fa-4e1a-8675-bbaa7afea7f7",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/projects",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"projects"
							]
						}
					},
					"response": [
						{
							"id": "2304ad6d-c737-4508-8188-61bb23902235",
							"name": "Return all a list of all projects",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/projects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"projects"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"id\": \"<number>\"\n  },\n  {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"id\": \"<number>\"\n  }\n]"
						}
					]
				},
				{
					"name": "Create a new Project Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0c95a394-6e97-452c-93e8-16c5bd2f251d",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"var jsonData = pm.response.json();",
									"pm.test(\"Your test name\", function () {",
									"    pm.expect(jsonData.id).to.eql(3);",
									"    pm.expect(jsonData.name).to.eql(\"Frogify\");",
									"    pm.expect(jsonData.description).to.eql(\"Project about musical frogs\");",
									"});",
									"",
									"var schema = {",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"id\": {",
									"      \"type\": \"integer\"",
									"    },",
									"    \"name\": {",
									"      \"type\": \"string\"",
									"    },",
									"    \"description\": {",
									"      \"type\": \"string\"",
									"    }",
									"  },",
									"  \"required\": [",
									"    \"id\",",
									"    \"name\",",
									"    \"description\"",
									"  ]",
									"};",
									"",
									"",
									"pm.test('Schema is valid', function () {",
									"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "a186c3fa-95e2-4175-b367-00e38f0a381c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"FrOgiFY3\",\n  \"description\": \"Project about musical frogs\",\n  \"users\": [\n    {\n      \"id\": 1,\n      \"role\": \"Developer\"\n    },\n    {\n      \"id\": 2,\n      \"role\": \"ScrumMaster\",\n      \"secondaryRole\": \"Developer\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/projects",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"projects"
							]
						}
					},
					"response": [
						{
							"id": "0a9e3449-3e24-481d-9269-25994166dd42",
							"name": "The created Project.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"users\": [\n    {\n      \"id\": \"<number>\",\n      \"role\": \"<string>\"\n    },\n    {\n      \"id\": \"<number>\",\n      \"role\": \"<string>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/projects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"projects"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"id\": \"<number>\"\n}"
						},
						{
							"id": "dc3af0e4-52f2-479a-a7ff-fdb537d3cef4",
							"name": "Project with specified name already exists.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"users\": [\n    {\n      \"id\": \"<number>\",\n      \"role\": \"<string>\"\n    },\n    {\n      \"id\": \"<number>\",\n      \"role\": \"<string>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/projects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"projects"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "760dea12-4e28-4146-a5fb-dfd24dbe66aa",
							"name": "Some server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"users\": [\n    {\n      \"id\": \"<number>\",\n      \"role\": \"<string>\"\n    },\n    {\n      \"id\": \"<number>\",\n      \"role\": \"<string>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/projects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"projects"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create a new Project Copy 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "16e96aee-9de5-4044-b8d6-7b5d5fcf038e",
								"exec": [
									"pm.test(\"Status code is 409\", function () {",
									"    pm.response.to.have.status(409);",
									"});",
									"var jsonData = pm.response.json();",
									"",
									"var schema = {",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"status\": {",
									"      \"type\": \"string\"",
									"    },",
									"    \"error\": {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"code\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"path\": {",
									"          \"type\": \"array\",",
									"          \"items\": [",
									"            {",
									"              \"type\": \"string\"",
									"            }",
									"          ]",
									"        },",
									"        \"message\": {",
									"          \"type\": \"string\"",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"code\",",
									"        \"path\",",
									"        \"message\"",
									"      ]",
									"    }",
									"  },",
									"  \"required\": [",
									"    \"status\",",
									"    \"error\"",
									"  ]",
									"}",
									"",
									"",
									"pm.test('Schema is valid', function () {",
									"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "72eebf4f-3a1e-447c-ade4-413861841cbb",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Frogify\",\n  \"description\": \"Project about musical frogs\",\n  \"users\": [\n    {\n      \"id\": 1,\n      \"role\": \"Developer\"\n    },\n    {\n      \"id\": 2,\n      \"role\": \"ScrumMaster\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/projects",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"projects"
							]
						}
					},
					"response": [
						{
							"id": "48524d9b-a5c6-4067-be2c-bbcae33878e6",
							"name": "The created Project.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"users\": [\n    {\n      \"id\": \"<number>\",\n      \"role\": \"<string>\"\n    },\n    {\n      \"id\": \"<number>\",\n      \"role\": \"<string>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/projects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"projects"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"id\": \"<number>\"\n}"
						},
						{
							"id": "4f972099-23d7-4c52-b4f2-3bd6a99c36a9",
							"name": "Project with specified name already exists.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"users\": [\n    {\n      \"id\": \"<number>\",\n      \"role\": \"<string>\"\n    },\n    {\n      \"id\": \"<number>\",\n      \"role\": \"<string>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/projects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"projects"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "279db715-e0a2-4db4-9601-1d72be22b411",
							"name": "Some server error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"users\": [\n    {\n      \"id\": \"<number>\",\n      \"role\": \"<string>\"\n    },\n    {\n      \"id\": \"<number>\",\n      \"role\": \"<string>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/projects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"projects"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get all projects Copy 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b31d1672-827a-435b-8417-0ad8e6609228",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Number of projects is 3\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.length).to.eql(3);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "b1ddc440-8584-423a-8d9a-7403f31982bc",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/projects",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"projects"
							]
						}
					},
					"response": [
						{
							"id": "2768d4e2-c985-451d-a9c9-a392a57d13f7",
							"name": "Return all a list of all projects",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/projects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"projects"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"id\": \"<number>\"\n  },\n  {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"id\": \"<number>\"\n  }\n]"
						}
					]
				},
				{
					"name": "Get single project",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b31d1672-827a-435b-8417-0ad8e6609228",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// pm.test(\"Project structure\", function () {",
									"//     var jsonData = pm.response.json();",
									"//     pm.expect(jsonData.length).to.eql(2);",
									"// });"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "0710eb8f-f208-48d8-b0aa-193ec27423c4",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/projects/2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"projects",
								"2"
							]
						}
					},
					"response": [
						{
							"id": "6d8660bf-213a-412d-b3eb-80637777fa47",
							"name": "Return all a list of all projects",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/projects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"projects"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"id\": \"<number>\"\n  },\n  {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"id\": \"<number>\"\n  }\n]"
						}
					]
				}
			],
			"id": "286b57d6-9c92-49dd-aff3-4c1bf962b148"
		},
		{
			"name": "usersOnProjects",
			"item": [
				{
					"name": "users of project",
					"id": "e9411ab6-aedb-4641-b516-5ab8f2e48d74",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8000/api/projects/3/users",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"projects",
								"3",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "projects of user",
					"id": "6bab70f8-b2c9-4805-acf9-b04b645d1032",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8000/api/users/1/projects",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"users",
								"1",
								"projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "projects of user Copy",
					"id": "29e2535c-8de8-4581-bfa2-8f204e3691b6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"secondaryRole\": null\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8000/api/users/1/projects/1",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"users",
								"1",
								"projects",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "update many",
					"id": "86f1926e-1919-4b96-a39c-ab8e8e4abcf9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n       \"userId\": 3,\n       \"active\": false\n    },\n    {\n       \"userId\": 2,\n       \"role\": \"Developer\"  \n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8000/api/projects/1/project-roles-updatemany",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"projects",
								"1",
								"project-roles-updatemany"
							]
						}
					},
					"response": []
				},
				{
					"name": "create many",
					"id": "6700ea6b-1fe6-44c1-9499-724e37eb5e2d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n       \"userId\": 1,\n       \"role\": \"ProductOwner\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8000/api/projects/2/project-roles-createmany",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"projects",
								"2",
								"project-roles-createmany"
							]
						}
					},
					"response": []
				}
			],
			"id": "41f339fc-a9ce-483f-9fc6-085dfffb8e60"
		},
		{
			"name": "stories",
			"item": [
				{
					"name": "get all user stories",
					"id": "f50c4567-a4d4-4c95-80ce-95d714bf0d3f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8000/api/projects/1/stories",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"projects",
								"1",
								"stories"
							]
						}
					},
					"response": []
				},
				{
					"name": "post new user story",
					"id": "96234eab-4c6a-4ade-9e4e-e711e4d54bc2",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"Description mockup\",\n    \"name\": \"roles tEst2\",\n    \"priority\": \"CouldHave\",\n    \"businessValue\": 4,\n    \"status\": \"SprintBacklog\",\n    \"acceptanceCriteria\": \"create new mockup\",\n    \"sprintId\": null\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8000/api/projects/2/stories",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"projects",
								"2",
								"stories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update story values",
					"id": "d0dd893a-52a4-4933-8e96-22da0d7f5399",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"rejectedComment\": \"Lol what is this?\",\n    \"rejectedSprintId\": 2\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8000/api/stories/1",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"stories",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update story values Copy",
					"id": "158b1f1c-74d5-4558-bb15-baa21ab64a30",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8000/api/stories/6",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"stories",
								"6"
							]
						}
					},
					"response": []
				}
			],
			"id": "ed134adf-3c5e-4ac2-a298-10e03acc6709"
		},
		{
			"name": "tasks",
			"item": [
				{
					"name": "get tasks from story",
					"id": "065969e1-5990-4c06-a41c-4ab0f35eb357",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8000/api/stories/1/tasks",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"stories",
								"1",
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "create new task on story",
					"id": "8b060249-9420-4540-bd35-e8bb24d338e7",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"Fix the frontend \",\n    \"timeEstimation\": \"PT10H\",\n    \"status\": \"Unassigned\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8000/api/stories/1/tasks",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"stories",
								"1",
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "create new task on story Copy",
					"id": "6a91a4d8-efcc-44fe-aeee-f7125be31f0a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\": \"Active\",\n    \"asigneeId\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8000/api/tasks/1",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"tasks",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete task",
					"id": "fcf466e5-ac0a-47b9-9fd5-1bee9bd14ac9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "localhost:8000/api/tasks/1",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"tasks",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"id": "a778a140-3268-4caa-af6c-0c6e0fd7b8c2"
		},
		{
			"name": "sprint",
			"item": [
				{
					"name": "get all sprints",
					"id": "1ac1a33e-72f9-4353-bcb5-f2daf6f085f6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8000/api/projects/1/sprints",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"projects",
								"1",
								"sprints"
							]
						}
					},
					"response": []
				},
				{
					"name": "get current sprint",
					"id": "18a2d226-b316-4696-b959-e0a09f2ddbec",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8000/api/projects/1/sprints/current",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"projects",
								"1",
								"sprints",
								"current"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new sprint",
					"id": "eac51bbd-2411-4ed6-9a36-4e682f5e7eaf",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"snailing5\",\n  \"startDate\": \"2023-04-19\",\n  \"endDate\": \"2023-04-21\",\n  \"speed\": 20\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8000/api/projects/1/sprints",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"projects",
								"1",
								"sprints"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new sprint Copy",
					"id": "f2d54dce-96f1-4b9b-9c95-33af164c60d3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"first sprint MEHA\",\n    \"startDate\": \"2023-04-20\",\n    \"endDate\": \"2023-04-28\",\n    \"speed\": 20\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8000/api/sprints/1",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"sprints",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "get all sprints Copy",
					"id": "1e4453ab-b11c-417c-ad5e-55236a96276f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "localhost:8000/api/sprints/3",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"sprints",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "New Request",
					"id": "1a713a2b-09af-4a5a-9710-0b0030c35136",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8000/api/sprints/1",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"sprints",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"id": "264cdbec-7a41-4d03-9c02-c75e9cdf1613"
		},
		{
			"name": "NonProductOwner access",
			"item": [
				{
					"name": "login with correct credentials Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "38b6e376-7acc-463d-a26d-282ecf75f274",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"The response has all properties\", () => {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.id).to.eql(2);",
									"    pm.expect(responseJson.name).to.eql('Slavko');",
									"    pm.expect(responseJson.email).to.eql('developer@prisma.com');",
									"    pm.expect(responseJson.isAdmin).to.eql(false);",
									"    pm.expect(responseJson.lastLogin).to.eql(null);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "63b6c520-25d0-422c-8ee4-fb6164c65638",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"developer@prisma.com\",\n    \"password\": \"123456789012\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "post new user story Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a9aeb78a-bf30-4f1d-8135-1ec6f6fb06f5",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "adc9f6ae-0dde-4ca9-98f8-8743d078eced",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"description mockup\",\n    \"name\": \"role test\",\n    \"priority\": \"CouldHave\",\n    \"businessValue\": \"High\",\n    \"projectId\": 1,\n    \"status\": \"SprintBacklog\",\n    \"acceptanceCriteria\": \"create new mockup\",\n    \"sprintId\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8000/api/projects/1/stories",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"projects",
								"1",
								"stories"
							]
						}
					},
					"response": []
				}
			],
			"id": "24bf3c05-f67d-4581-abfa-6c55d1dd8c51"
		},
		{
			"name": "11 - Time estimation",
			"item": [
				{
					"name": "get all user stories Copy",
					"id": "81f33cac-d66c-4cc0-80c5-14e55d6129f9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8000/api/projects/1/stories",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"projects",
								"1",
								"stories"
							]
						}
					},
					"response": []
				},
				{
					"name": "get single user story",
					"id": "52f817eb-9370-410d-89d4-e2f472dfa62e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8000/api/stories/1",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"stories",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "assign time complexity",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "70c99c0a-898c-40de-beaa-74e982be933f",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Your test name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.timeComplexity).to.eql(3);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "ae51e89a-4b69-4322-b2ed-da9955f582fa",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"timeComplexity\": 3\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8000/api/stories/1",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"stories",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"id": "129fad36-0dd4-46e1-80fa-ccac6501e6a5"
		},
		{
			"name": "18 - time log on task",
			"item": [
				{
					"name": "get all logs for story",
					"id": "1e2b5ca9-25c0-4ab0-b78f-456ce5e2a75b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8000/api/stories/1/timelogs",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"stories",
								"1",
								"timelogs"
							]
						}
					},
					"response": []
				},
				{
					"name": "get all logs for task",
					"id": "24ca047c-fe26-4358-8ade-780e859b0107",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8000/api/tasks/3/timelogs",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"tasks",
								"3",
								"timelogs"
							]
						}
					},
					"response": []
				},
				{
					"name": "create a new log",
					"id": "6bf4a391-70a4-4c74-92f3-a7cd10cb28e7",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"storyId\": 1,\n    \"userId\": 1,\n    \"taskId\": 3,\n    \"day\": \"2023-03-16\",\n    \"hours\": 0.5\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8000/api/timelogs",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"timelogs"
							]
						}
					},
					"response": []
				},
				{
					"name": "update hour_estimation (time_remaining)",
					"id": "847033a3-1fe0-4452-940e-beab16bd0d10",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"hours_estimate\": 3\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8000/api/timelogs/7",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"timelogs",
								"7"
							]
						}
					},
					"response": []
				}
			],
			"id": "7bcba8b0-a86e-447e-b1a7-700cbe6369cf"
		},
		{
			"name": "28 - sprint backlog",
			"item": [
				{
					"name": "get all logs for story Copy 2",
					"id": "c2eeb3bc-fe88-4b7a-b25e-9d9be9ece6b0",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8000/api/projects/1/sprints/current/tasks",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"projects",
								"1",
								"sprints",
								"current",
								"tasks"
							]
						}
					},
					"response": []
				}
			],
			"id": "ec3c83a9-5ee3-4cac-b9fc-6d1152bb0a77"
		},
		{
			"name": "07 - managing sprints",
			"item": [
				{
					"name": "update a single sprint",
					"id": "78546d4e-ce9c-4a80-9291-ff473c04a01c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"AAAA\",\n    \"startDate\": \"2023-03-03\",\n    \"endDate\": \"2023-04-07\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8000/api/sprints/3",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"sprints",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "update a single sprint Copy",
					"id": "d3895780-4e75-454b-98ec-1a7fb3d422d9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"AAAA\",\n    \"startDate\": \"2023-03-03\",\n    \"endDate\": \"2023-04-07\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8000/api/sprints/3",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"sprints",
								"3"
							]
						}
					},
					"response": []
				}
			],
			"id": "8ffb4236-a75f-4e6a-9c58-05ead29250aa"
		}
	],
	"variable": [
		{
			"id": "e5d86f55-0829-45e2-9fb6-e6501d06f39a",
			"key": "baseUrl",
			"value": "http://localhost:8000",
			"type": "string"
		}
	]
}